name: Go

on:
  push:
    branches:
      - master
    tags:
      - "v*"
  pull_request:

env:
  IMAGE_NAME: agent

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Build
        run: go build .

  build-docker:
    name: Build Docker
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Login to Github CR
        run: echo "${{ secrets.PP_GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u pinpointbot --password-stdin

      - name: Build Docker
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Push image
        run: |
          # TODO: port to ghcr
          IMAGE_ID=docker.pkg.github.com/pinpt/agent/$IMAGE_NAME          

          echo TAG=${{ github.sha }}
          echo IMAGE_ID=$IMAGE_ID

          docker tag $IMAGE_NAME $IMAGE_ID:${{ github.sha }}
          docker push $IMAGE_ID:${{ github.sha }}

      - name: Delete Package Versions
        uses: actions/delete-package-versions@v1.0.3
        with:
          package-name: "agent"

  tag-docker:
    name: Tag Docker
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    needs:
      - build-docker
    steps:
      - uses: actions/checkout@v2

      - name: Login to Github CR
        run: echo "${{ secrets.PP_GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u pinpointbot --password-stdin

      - name: Pull Image
        run: docker pull docker.pkg.github.com/pinpt/agent/$IMAGE_NAME:${{ github.sha }}

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/pinpt/agent/$IMAGE_NAME          

          echo ${{ github.ref }}

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          if [ "$VERSION" != "master" ]; then
            echo pushing $IMAGE_ID:$VERSION
            docker tag $IMAGE_ID:${{ github.sha }} $IMAGE_ID:$VERSION
            docker push $IMAGE_ID:$VERSION
          fi

          echo pushing $IMAGE_ID:latest
          docker tag $IMAGE_ID:${{ github.sha }} $IMAGE_ID:latest
          docker push $IMAGE_ID:latest

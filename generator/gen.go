// Code generated for package generator by go-bindata DO NOT EDIT. (@generated)
// sources:
// generator/template/README.md.tmpl
// generator/template/app/.gitignore
// generator/template/app/README.md.tmpl
// generator/template/app/package.json.tmpl
// generator/template/app/public/index.html
// generator/template/app/public/robots.txt
// generator/template/app/src/App.tsx.tmpl
// generator/template/app/src/index.tsx.tmpl
// generator/template/app/src/integration.tsx
// generator/template/app/tsconfig.json
// generator/template/go.mod.tmpl
// generator/template/integration.go.tmpl
// generator/template/integration.yaml.tmpl
// generator/template/internal/root.go.tmpl
package generator

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templateReadmeMdTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xcd\x41\x0a\xc2\x30\x10\x85\xe1\xfd\x9c\xe2\x41\xd6\x7a\x00\x77\x62\x37\x82\x98\x22\xf1\x00\x53\x18\xec\x60\x4c\x24\x9d\x54\xa4\xf4\xee\x42\x11\x0a\xdd\xfe\xbc\xc7\xe7\x1c\xa6\x09\xfb\xa0\x16\xe5\xc4\x83\x5c\xf9\x25\x98\x67\xb4\x9a\xde\x59\x93\xe1\x9c\x4c\x1e\x85\x4d\x73\x22\x72\xce\xc1\x8f\x52\x46\x95\x0f\x51\xf0\x8d\x3f\x20\x70\x7c\x82\xbb\x5c\x0d\xdf\x5c\x0b\x74\x7b\x38\x56\xeb\x73\x21\xda\x2d\x52\x5b\xbb\xa8\x43\x2f\xe5\x2f\x6d\xf3\xfd\x76\x59\x6b\xc3\xb6\x6c\x7e\x01\x00\x00\xff\xff\x55\xc9\x8c\xa1\xa6\x00\x00\x00")

func templateReadmeMdTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateReadmeMdTmpl,
		"template/README.md.tmpl",
	)
}

func templateReadmeMdTmpl() (*asset, error) {
	bytes, err := templateReadmeMdTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/README.md.tmpl", size: 166, mode: os.FileMode(420), modTime: time.Unix(1592296240, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateAppGitignore = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8c\x41\x6a\x04\x21\x10\x45\xf7\x9e\x42\x98\x5d\x60\x74\x9f\x75\x6e\xd0\x07\x18\x6c\xfd\x63\x1b\xb4\x4a\xca\xb2\x21\xb7\x0f\x66\x12\x32\x30\x9b\xa2\xde\xfb\x9f\x7f\xb1\x1b\x60\x0f\xd5\x3e\xde\xbd\x3f\x50\xbb\xcb\x45\x8f\xb9\xbb\xc8\xcd\x07\xd1\x12\x2b\x86\x2f\x99\x58\x0a\xe5\xeb\xbd\x2c\xb4\x77\x16\xdb\x58\x60\xc3\xce\x53\xed\x5f\x6c\x7f\x62\x67\xcc\xc5\x26\x74\x50\x02\xc5\x82\x61\x3c\x71\xc2\xad\x71\x9a\x75\x91\xeb\xd4\xcd\x3a\xee\x73\xac\xae\x62\x68\xa1\x6c\x7c\xe4\x13\x12\x32\x96\xec\xc2\x69\x46\x2d\x4c\xc6\xef\xb3\xd4\xb4\x64\x2b\x23\x1a\xf7\xb1\xdd\x36\x65\x81\x71\xa0\xd3\x55\x8e\xa1\x3e\xde\x84\x13\x95\x7b\x03\xe9\xb3\x5e\xfb\xcf\xfc\x3f\xfd\x6b\x0d\xf5\x76\x4d\xd8\x67\x76\x95\xf3\x9b\xf9\x0a\x42\x2f\x0c\x11\x96\x07\x7f\x07\x00\x00\xff\xff\x45\xd9\x06\x74\x36\x01\x00\x00")

func templateAppGitignoreBytes() ([]byte, error) {
	return bindataRead(
		_templateAppGitignore,
		"template/app/.gitignore",
	)
}

func templateAppGitignore() (*asset, error) {
	bytes, err := templateAppGitignoreBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/app/.gitignore", size: 310, mode: os.FileMode(420), modTime: time.Unix(1592296240, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateAppReadmeMdTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8d\x41\x0a\xc2\x30\x10\x45\xf7\x73\x8a\x0f\x59\xeb\x01\xdc\x89\xdd\x14\xc4\x16\x69\x0e\x30\x85\xc1\x0e\xc6\x44\xd2\x49\x45\x4a\xef\x2e\x54\xa1\xe0\xf6\xf1\x1e\xcf\x39\xcc\x33\xf6\x9d\x5a\x90\x13\x8f\x72\xe1\x87\x60\x59\xd0\x6a\x7c\x26\x8d\x06\x5f\xa3\x8e\x26\xb7\xcc\xa6\x29\x12\x39\xe7\xd0\x4c\x92\x27\x95\x17\x51\xd7\x54\xcd\x01\x1d\x87\x3b\xb8\x4f\xc5\xf0\x4e\x25\x43\xb7\x00\xbe\xfe\x36\xc7\x62\x43\xca\x44\xbb\xf5\xd7\x96\x3e\xe8\x38\x48\xfe\xfd\xfe\xb1\xbf\x9e\x37\x5a\xb1\xad\xce\x27\x00\x00\xff\xff\xf8\xfd\xe5\xe1\xac\x00\x00\x00")

func templateAppReadmeMdTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateAppReadmeMdTmpl,
		"template/app/README.md.tmpl",
	)
}

func templateAppReadmeMdTmpl() (*asset, error) {
	bytes, err := templateAppReadmeMdTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/app/README.md.tmpl", size: 172, mode: os.FileMode(420), modTime: time.Unix(1592296240, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateAppPackageJsonTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x93\x4d\x6e\xdb\x30\x10\x85\xf7\x3e\xc5\x80\x40\x77\xf1\xd8\x92\x8d\x06\xc9\xa2\x08\x90\x55\x81\xa2\x17\x28\x9a\x82\x16\x47\xce\x04\x12\x49\x0c\x69\x27\x81\xa0\x9e\xbd\x10\xa9\x48\x51\xe3\x6c\xdf\xf7\xde\xfc\x50\xa3\x6e\x05\xa0\xac\x6e\x49\xdd\x82\xba\xeb\x3a\xfc\x6e\xc8\x46\xae\x99\xa4\xef\x37\x5d\x87\x3f\xdc\x33\xc9\xbd\x0e\xf4\x53\xb7\xd4\xf7\xea\x6a\x08\x9c\x49\x02\x3b\x3b\x64\x0a\xdc\xe2\x36\xab\x5e\xf8\xac\xe3\x50\x29\xca\x89\x92\x64\xc8\x93\x35\x64\x2b\xa6\xa0\x6e\x61\xe8\x06\xa0\xee\x22\x85\xc8\xf6\xb8\x6e\xf8\x20\x5a\x5e\x37\x4f\x14\xe2\xda\xb8\x76\x28\xf8\xb0\xc7\x12\xf7\xa9\xe2\x25\xab\x90\xae\x62\xf2\xdd\xe0\x0e\xcb\x4f\x7d\xa7\x40\xb2\xa6\x33\xd9\x6c\xbe\xc6\xe2\xbd\xf9\xd5\x53\x48\x5d\x13\x2c\xf7\xd3\x12\x33\xb5\xce\xa4\x47\x79\x28\xca\x0b\x74\x1e\xa3\xf8\x8a\x37\x97\xf1\xb4\xd1\xd2\xb2\x88\x16\x3b\x2c\x16\xe0\x7d\xe8\x23\x0c\x95\xb0\x8f\xc3\x53\xaa\x1d\xee\x67\x9a\xba\x26\x36\xa0\xbf\x3b\xbc\xc6\x52\xad\x00\xfa\xf4\x15\xe6\xd4\xf8\x01\x42\xd4\x92\x9c\x8b\xaa\x90\xe5\xb1\xe4\xe1\xc4\x8d\xf9\xe8\xc9\xf2\x5b\xdb\xf1\x05\x97\x96\xa4\x8e\x0e\x7a\xa2\xea\x82\x25\xcb\xd3\x80\x14\x1a\xb6\xf1\xde\xd9\x9a\x8f\xf3\x94\xf4\x12\xc9\x9a\x30\xa7\xb5\xf7\x73\xe6\x20\xee\x39\x90\x84\x86\xd3\x0c\x63\xc6\x8b\x33\xa7\x2a\xe6\xe3\xfc\x95\x34\x00\xf5\x6d\x8b\xe5\x97\x71\xa4\xe1\xde\x5d\x04\x43\xda\x2c\x15\xe7\xff\xb4\x6c\x19\x74\xd3\xa8\xa4\xff\x1e\x77\x30\x74\xa6\xc6\xf9\x36\xdf\xd2\x54\xb4\xd1\x21\x42\x01\xd5\xa3\xb8\x96\xe0\xed\x97\xb8\xfa\x0f\xd7\x2c\x54\xbb\x97\x4f\x79\xd0\xb5\x16\x9e\x70\x6e\x3c\x2d\xf9\xe8\x5a\xf2\xfa\x98\x0e\x11\x37\x6a\xd5\xaf\xfe\x05\x00\x00\xff\xff\x85\x07\x9d\x3d\xb1\x03\x00\x00")

func templateAppPackageJsonTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateAppPackageJsonTmpl,
		"template/app/package.json.tmpl",
	)
}

func templateAppPackageJsonTmpl() (*asset, error) {
	bytes, err := templateAppPackageJsonTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/app/package.json.tmpl", size: 945, mode: os.FileMode(420), modTime: time.Unix(1592296240, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateAppPublicIndexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x90\xbf\x4e\xc4\x30\x0c\x87\xf7\x7b\x0a\x93\x99\x12\xb1\x31\x38\x5d\x80\x85\x05\x24\x58\x6e\xf4\x25\x86\x58\x4a\x9d\x2a\x75\x73\xe2\xed\x51\xaf\x07\x62\xf2\x9f\x9f\xfc\x7d\x92\xf1\xe6\xe9\xf5\xf1\xe3\xf8\xf6\x0c\xd9\xa6\x32\x1e\x70\x2b\x50\x48\xbf\x82\x63\x75\xe3\x01\x00\x33\x53\xda\x1a\x00\x9c\xd8\x08\x62\xa6\xb6\xb0\x05\xb7\xda\xe7\xf0\xe0\xc0\xff\x0f\x95\x26\x0e\xae\x0b\x9f\xe7\xda\xcc\x41\xac\x6a\xac\x16\xdc\x59\x92\xe5\x90\xb8\x4b\xe4\xe1\x32\xdc\x82\xa8\x98\x50\x19\x96\x48\x85\xc3\xfd\x15\x85\xfe\xd7\x88\xa7\x9a\xbe\xaf\x74\xad\x4b\x6c\x32\xdb\x78\xac\x2b\x28\x73\x02\xab\xc0\x4a\xa7\xc2\xf0\x42\x9d\xde\x2f\xe9\xb6\x6c\xab\x82\x65\x59\x80\xe6\xf9\x0e\xfd\xdf\xe1\xce\x49\xd2\x41\x52\x70\xad\x56\x73\x23\xfa\x24\x7d\x97\xee\x2e\xf4\xfb\x23\x7e\x02\x00\x00\xff\xff\x19\x69\x1b\xad\x19\x01\x00\x00")

func templateAppPublicIndexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templateAppPublicIndexHtml,
		"template/app/public/index.html",
	)
}

func templateAppPublicIndexHtml() (*asset, error) {
	bytes, err := templateAppPublicIndexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/app/public/index.html", size: 281, mode: os.FileMode(420), modTime: time.Unix(1592296240, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateAppPublicRobotsTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\xc8\x28\x29\x29\x28\xb6\xd2\xd7\x2f\x2f\x2f\xd7\x2b\xca\x4f\xca\x2f\x29\x2e\xa9\x28\xd1\xcb\x2f\x4a\xd7\x47\xf0\x32\x4a\x72\x73\xb8\x42\x8b\x53\x8b\x74\x13\xd3\x53\xf3\x4a\xac\x14\xb4\xb8\x5c\x32\x8b\x13\x73\x72\xf2\xcb\xad\xb8\x00\x01\x00\x00\xff\xff\x55\x9d\xd1\x4a\x43\x00\x00\x00")

func templateAppPublicRobotsTxtBytes() ([]byte, error) {
	return bindataRead(
		_templateAppPublicRobotsTxt,
		"template/app/public/robots.txt",
	)
}

func templateAppPublicRobotsTxt() (*asset, error) {
	bytes, err := templateAppPublicRobotsTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/app/public/robots.txt", size: 67, mode: os.FileMode(420), modTime: time.Unix(1592296240, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateAppSrcAppTsxTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x53\xcb\x6e\xdb\x30\x10\x3c\x93\x5f\xb1\x08\x8a\xc8\x06\x52\xa9\x67\xd9\x32\x1a\xf4\x14\x20\x68\x83\x3c\x4e\x45\x0f\x8c\xb4\xb2\x17\xa1\x97\x04\x49\xd9\x29\x04\xfe\x7b\x41\xca\x6a\x9c\xe4\x46\x0d\x67\x86\xb3\x23\x92\xf6\xd6\xb8\x00\xf7\xa8\xda\x00\xbd\x33\x7b\x28\x5c\x5a\x17\x2b\x79\xda\x1a\xe1\x81\xf6\x83\x56\xc1\xb8\x1b\xf6\x41\x69\x8d\xee\x0a\x6e\x38\xe0\xd6\xa9\x40\x86\x21\x9e\x84\xdf\x2d\xb1\x0d\x95\xda\x22\x87\xf2\x88\xcf\xbe\x7b\x79\xb3\x39\x13\x3c\xdd\x9c\x04\x65\x45\x6f\x68\xb1\x92\xb2\x1f\xb8\xcd\x96\xd7\xd6\x2e\x96\x30\x4a\x51\x55\xd0\xee\xb0\x7d\x81\x60\xc0\x23\x02\xf5\x70\x44\x50\x0e\xc1\x0d\xcc\xc4\x5b\xd0\xa6\x55\x1a\x14\x77\xc0\x88\x5d\xe2\xb9\x81\x81\x18\xfc\x14\x3b\xd9\xed\x4d\x87\x52\x50\x0f\x8b\x23\x71\x67\x8e\xd0\x34\x0d\x4c\xcb\xd2\x2a\x87\x1c\xe0\xf2\x72\x06\x92\x61\x52\x95\x3b\x87\x7d\x49\xdc\xe1\xeb\xaf\x7e\x51\xe4\x73\x76\xc6\x87\x62\x09\x1b\xf8\x96\xd3\x89\xd6\xb0\x0f\x70\x36\x45\xfd\xae\x99\x26\x93\x04\xab\x3d\xd6\x50\x8c\x23\x94\x77\xc3\xb3\x26\xbf\x43\xf7\x53\xed\x11\x62\x2c\xae\x12\xa1\x43\xdf\x3a\xb2\x93\x41\xf1\xb8\x23\x0f\xe4\x21\xec\x10\x92\xe6\x91\x82\xc6\x1f\xca\xe3\x49\x73\x7e\x1e\xf4\xc6\xc1\x1d\xb1\x35\xc4\x61\x32\x0b\x6a\xeb\x6b\xf8\x9d\x96\x62\x1c\xbf\x82\x53\xbc\x45\xf8\x72\x50\x1a\xea\x06\xca\xb3\x7c\x8f\x7f\x2d\x7a\x88\x31\x53\x45\xca\x97\x59\x73\x2a\x80\xac\x47\xee\x26\xca\x9f\x8c\xd2\xe9\x12\x74\x35\xf4\x4a\x7b\xcc\xa0\xc3\x3e\x99\xe5\x21\xcb\x5b\x73\x44\x37\xe7\x9d\xcd\xa8\xcd\xb3\x4d\x1f\x76\x6e\xa1\x9e\x0a\x7a\x6b\xe8\x7d\x41\xb3\x58\xa8\x83\x0a\xca\x7d\x60\x5c\x67\xf0\x3f\x67\x70\xfa\x03\xe1\xe9\xfe\x36\xc6\x22\x6d\xc6\x4c\x19\xe8\xe9\xfe\xb6\xfe\xf4\x9f\x83\x79\x08\x8e\x78\xbb\x58\x4a\x21\xe2\x4a\xa6\x71\xc2\xe0\x18\xd6\x9f\x6f\xfe\x79\xf7\xcd\x78\xf6\x11\xa1\xda\xac\xa4\x88\x72\x16\x2f\xa4\x10\xeb\x8e\x0e\xd0\x6a\xe5\x7d\x9a\xa6\xb9\xb8\xb6\xf6\x62\x93\x92\xac\xdf\x3f\x87\x2a\x81\xeb\xaa\xa3\xc3\x46\x8a\xe5\x4a\x46\x29\xf1\x35\x3f\x9b\x0e\x7b\x35\xe8\x90\x1e\xc4\x4a\xfe\x0b\x00\x00\xff\xff\x59\x32\x2b\xa2\xad\x03\x00\x00")

func templateAppSrcAppTsxTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateAppSrcAppTsxTmpl,
		"template/app/src/App.tsx.tmpl",
	)
}

func templateAppSrcAppTsxTmpl() (*asset, error) {
	bytes, err := templateAppSrcAppTsxTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/app/src/App.tsx.tmpl", size: 941, mode: os.FileMode(420), modTime: time.Unix(1592343104, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateAppSrcIndexTsxTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\x41\x4e\xeb\x30\x10\x86\xd7\xf6\x29\xac\x6e\xdc\x4a\xef\xd9\x07\x48\xa8\x08\x85\x05\x12\x85\x0a\xb8\x40\x1a\x4f\x8b\x45\x9d\x19\x4d\xa6\x94\x2a\xca\xdd\x51\xa2\x54\xa9\x04\xbb\xb1\xbf\xdf\xdf\xef\x89\x89\x90\xc5\xbc\x42\x59\x89\xd9\x31\x26\x63\xb9\x9f\x6d\xa6\xaf\xd1\xfd\xcb\xfa\x9a\xfe\x0f\x98\xa6\x44\x6b\x0a\xa2\x15\xd6\x02\xdf\x62\xba\x31\x77\x4b\xb1\x26\xf1\xe5\x1e\x6a\x71\x27\xd8\x36\xe1\x73\x7a\x51\x10\x8d\x31\xe7\x0b\x22\x9b\x69\x7d\xa9\x71\x0c\x75\x00\x9e\x6b\x95\x0f\x57\xee\x4d\x38\x56\xb2\xc6\x00\x4b\xad\x54\x3e\x55\xb9\x0d\xe3\x57\x0c\xc0\x86\x8e\xdb\x43\x6c\x3e\x80\x6f\x66\x6d\xeb\x36\x97\xd3\x73\x99\xa0\xeb\x66\x86\x61\xf7\x7e\x26\x18\xe0\x13\x9e\x80\x57\x65\x03\x23\xec\x9d\x83\xd4\xf8\x41\xef\xff\xf0\x2f\xb5\xca\xfd\xaf\xcf\xfc\xd3\x2a\x60\x75\x4c\xfd\x7e\x7b\x90\x87\x03\xf4\xe3\xdd\xf9\x31\xcc\x2d\x23\x8a\x5d\xe8\x45\xa6\x7f\x02\x00\x00\xff\xff\x23\x1f\x05\x22\x60\x01\x00\x00")

func templateAppSrcIndexTsxTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateAppSrcIndexTsxTmpl,
		"template/app/src/index.tsx.tmpl",
	)
}

func templateAppSrcIndexTsxTmpl() (*asset, error) {
	bytes, err := templateAppSrcIndexTsxTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/app/src/index.tsx.tmpl", size: 352, mode: os.FileMode(420), modTime: time.Unix(1592296240, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateAppSrcIntegrationTsx = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8d\xb1\x0a\xc2\x40\x10\x05\xeb\xdb\xaf\x78\x5d\x92\xca\x0f\xb8\xe4\xfa\xb4\x82\x85\xe5\x11\x37\xf1\xc0\xec\xca\xde\x1e\x08\xe2\xbf\x8b\x56\xda\x4d\x31\xcc\x94\xfd\xae\xe6\x38\x72\x5e\x1c\xab\xe9\x8e\xce\x3e\xdc\x45\xa2\x45\xa5\x3a\x66\x71\xde\x2c\x7b\x51\xc1\x84\x7e\xc0\x94\xf0\xa4\x60\xec\xcd\x04\x3d\x85\x30\xa6\xb3\x36\x43\xf9\x11\x4f\x33\x36\xe5\x8a\x2b\x1b\x8f\x87\x44\x61\x88\xf4\x8a\x44\xfc\xf8\xee\x2e\xbc\xe6\x76\xfb\x6b\xc7\x77\x00\x00\x00\xff\xff\x2a\x1d\xd5\x56\x8a\x00\x00\x00")

func templateAppSrcIntegrationTsxBytes() ([]byte, error) {
	return bindataRead(
		_templateAppSrcIntegrationTsx,
		"template/app/src/integration.tsx",
	)
}

func templateAppSrcIntegrationTsx() (*asset, error) {
	bytes, err := templateAppSrcIntegrationTsxBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/app/src/integration.tsx", size: 138, mode: os.FileMode(420), modTime: time.Unix(1592296240, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateAppTsconfigJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x91\xc1\x4e\xf3\x30\x10\x84\xef\x7d\x0a\x6b\xcf\xbf\xfe\x1b\x97\x5e\x0b\x48\xad\x28\x48\x70\x44\x3d\x38\xce\xb6\x5d\x6a\xef\x46\xde\x0d\x14\xa1\xbe\x3b\xb2\x93\x02\xc9\x71\xbe\x89\x66\x36\xe3\xaf\x85\x73\x10\x24\x75\x14\x31\x3f\x75\x46\xc2\x0a\x4b\x57\xb0\x73\x60\x3e\x1f\xd0\x60\xe9\x00\xf5\x06\xfe\x0d\x30\x52\x03\x4b\xf7\x5a\x85\x73\xd0\x4a\x1a\x9d\x41\xfc\x27\xc3\xec\x9b\x88\xbf\x14\x95\xf1\x6c\x50\xe5\x6e\x4c\xf1\x31\xca\xc7\xa6\x74\x59\xee\x71\x84\x7a\xa2\xee\x81\x9a\xd5\x11\xc3\x69\xea\xa0\x6e\xa5\xed\x23\xae\xd9\x30\x4b\x37\x35\x6b\xd6\xcb\x27\xdb\x11\x8d\xc2\x2d\xee\x7d\x1f\x6d\x9d\x3a\xc9\x36\x2f\xb0\x4c\xc1\xa6\x6c\x2f\x39\xe0\x4a\x58\x49\x0d\xd9\x56\x5e\x89\x0f\x6b\xbe\xa7\x88\x8f\x3e\xe1\x2c\x21\xd5\x33\x86\x49\xea\x5f\x4d\xf8\x33\xaa\xc4\xbe\xac\x58\xbe\x60\x69\xaf\x2b\x40\x2e\xce\x3b\x6e\x54\x78\x7b\x8d\xf8\x13\x4b\x2a\xd1\x1b\xb6\x83\x37\xeb\x64\xb9\x4b\x34\xbb\xfa\x4d\xcf\xa5\x22\xa3\x0f\x75\xd9\x4b\xe1\x40\x1c\x62\xdf\xe2\xcf\xfb\x80\xe6\x50\xdc\xdd\xe2\xb2\xf8\x0e\x00\x00\xff\xff\xc9\x20\xaf\x73\xeb\x01\x00\x00")

func templateAppTsconfigJsonBytes() ([]byte, error) {
	return bindataRead(
		_templateAppTsconfigJson,
		"template/app/tsconfig.json",
	)
}

func templateAppTsconfigJson() (*asset, error) {
	bytes, err := templateAppTsconfigJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/app/tsconfig.json", size: 491, mode: os.FileMode(420), modTime: time.Unix(1592296240, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateGoModTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xce\xbd\x4e\xc3\x30\x14\x47\xf1\x99\xfb\x14\xff\x0d\x18\xea\x38\x51\xbf\x82\x04\x13\x7b\x19\x78\x81\xc4\xb9\xb5\x2d\x1c\x3b\x38\xd7\x29\xa8\xea\xbb\xa3\x6c\x4c\x5d\x7f\x67\x39\x63\x1a\x4a\x60\x5c\xaf\xea\xe3\xcb\xde\x6e\x44\x36\xa1\x56\xf5\x96\x28\xf3\x77\xf1\x99\xf1\x44\x0f\xd6\x8b\x2b\xbd\x32\x69\xac\x26\x1f\x27\xa9\x3a\xcb\x51\x54\xe4\x1f\xc1\xa2\x95\x56\x7a\xd3\xe8\x46\xeb\xbd\x6e\x75\x53\xb7\xbb\xdd\xa6\xdf\xf6\xfb\xb3\x31\x87\xe3\xb1\x3d\xd0\x33\x51\x55\xe1\xf3\xf4\x7e\x7a\x81\x38\x3f\xc3\xcf\x48\x31\xfc\x62\x66\xc1\xc5\xf9\xc0\xb8\xf0\x63\x66\xf8\x88\xdc\x4d\x7e\xc0\xc0\x8b\x42\x8a\x66\x0d\xb0\x2c\x48\x45\x90\xce\x10\xd7\xc9\x4a\xb3\x4b\x25\x0c\xc8\x3c\xa6\x85\x29\xf3\x14\x3a\xc3\xb8\xb7\xf9\xfa\x06\xa5\xfe\x01\xfd\x05\x00\x00\xff\xff\x72\x16\xf1\x69\xf9\x00\x00\x00")

func templateGoModTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateGoModTmpl,
		"template/go.mod.tmpl",
	)
}

func templateGoModTmpl() (*asset, error) {
	bytes, err := templateGoModTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/go.mod.tmpl", size: 249, mode: os.FileMode(420), modTime: time.Unix(1592296240, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateIntegrationGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8e\x31\x4e\xc4\x30\x10\x45\xeb\xcc\x29\x46\x2e\xd0\xa6\xb1\x0f\x41\x45\x01\xa2\xe0\x02\x43\x18\xbc\xa3\x8d\xc7\x96\x33\x46\x91\x2c\xdf\x1d\x11\x90\xc8\xb6\x5f\xef\xeb\xbd\x42\xcb\x8d\x22\x63\x22\x51\x00\x49\x25\x57\xc3\x0b\x4c\xae\x77\xff\x7a\x8b\x63\x04\x51\xe3\xaa\xb4\x3a\x98\x5c\x14\xbb\xb6\x77\xbf\xe4\x14\x8a\x68\xb1\x40\x91\xd5\xbc\xf2\x6e\xa1\x36\x55\xae\x0e\x66\x80\x10\xf0\x49\x8d\x63\x25\x93\xac\x28\x1b\xb6\x8d\x3f\xd0\x32\xf2\x7e\x08\xec\xca\x28\xff\x04\x7c\x51\xbd\x7f\xfc\x39\x7d\xef\xfe\x4d\x6c\xe5\x47\xda\xf8\x85\x12\x8f\x71\xc2\x00\x3e\x9b\x2e\x47\xfa\x65\xc6\x0e\xd3\x6f\x82\x7f\xfe\x19\x1e\x4e\xe0\x0c\x03\xbe\x03\x00\x00\xff\xff\xd9\x9d\x45\x01\xe9\x00\x00\x00")

func templateIntegrationGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateIntegrationGoTmpl,
		"template/integration.go.tmpl",
	)
}

func templateIntegrationGoTmpl() (*asset, error) {
	bytes, err := templateIntegrationGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/integration.go.tmpl", size: 233, mode: os.FileMode(420), modTime: time.Unix(1592296240, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateIntegrationYamlTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\xc1\x6a\xc2\x40\x10\x86\xef\x79\x8a\x9f\xd0\xab\x39\xf4\x18\xe8\x41\xbc\xb4\x20\xad\x14\x7b\x96\xd1\x4c\xcc\xe0\x66\x37\xec\x4e\x94\x12\xf6\xdd\xcb\x26\xc6\x6a\x7b\xcb\xfc\xdf\x37\x93\x99\xb5\xd4\x72\x89\x7c\x18\x8a\xad\xa8\xe1\x15\x05\x7e\xa7\x96\x63\xcc\x33\xcf\xf5\x4e\xbf\xbb\x2b\x5e\xbb\x0b\xfb\x7b\x5c\x71\x38\x78\xe9\x54\x9c\x2d\x91\x6f\x1b\x09\x90\x00\x6d\x18\xc3\x80\xc7\x69\x88\x11\x62\x95\x8f\x9e\x92\x8e\xda\x79\x6c\xc4\x76\x4e\xac\xe6\x59\xd7\xef\x8d\x84\x86\x7d\x99\x01\xbf\xfb\x6c\xe6\x78\xfe\x21\xd0\x7b\xf3\x87\x7d\x7d\xae\x27\x44\x67\x52\xf2\xbb\xff\xc6\x72\x04\x93\x24\x15\x5b\x95\x5a\xd8\x4f\xd2\xdb\xad\x4e\xfc\x40\x1d\xed\xc5\x88\x0a\x87\x32\x1b\x86\x05\x3c\xd9\x23\xe3\xe9\x4c\x06\xe5\x0b\x8a\xd5\x9d\x80\x18\x33\x60\x91\x6e\x1d\x79\x8c\x63\x07\xdb\x2a\xc6\x4c\x6c\x50\x32\x66\x3c\x36\x1d\xd5\xba\x2a\x8d\x04\x52\xc7\xc1\xb8\xbe\xba\x7e\x07\x36\x75\x4b\x96\x8e\x9c\x92\x91\x4c\x9a\x65\xbd\x38\x7f\x9a\x0a\xa0\x71\x41\xd3\xcb\x84\x39\x48\xcd\x79\x3e\x16\x8f\x6b\xcf\xf0\xc2\xfb\xe2\xd5\xb9\xd3\x2d\xa0\x5e\x9b\xe2\x63\xd9\x6b\xf3\x9c\xfd\x04\x00\x00\xff\xff\x14\xb9\x21\xa5\xf5\x01\x00\x00")

func templateIntegrationYamlTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateIntegrationYamlTmpl,
		"template/integration.yaml.tmpl",
	)
}

func templateIntegrationYamlTmpl() (*asset, error) {
	bytes, err := templateIntegrationYamlTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/integration.yaml.tmpl", size: 501, mode: os.FileMode(420), modTime: time.Unix(1592343065, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templateInternalRootGoTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\x4b\x6f\xe3\x36\x10\x3e\x8b\xbf\x62\xa0\x93\x5c\xb8\x56\xdf\x8f\x00\x3e\x14\x49\xd1\x0d\x90\x2e\xb6\x48\x80\x3d\x14\x45\x40\x49\x63\x89\x35\x45\x72\xc9\x51\x9c\x6d\x90\xff\x5e\xf0\x21\x4b\xd9\xc4\x75\x5c\x6c\x2e\xa1\x46\x9a\xf9\xbe\xf9\x66\x38\x63\xc3\xeb\x2d\x6f\x11\x84\x22\xb4\x8a\x4b\xc6\x44\x6f\xb4\x25\x28\x58\x96\xb7\x82\xba\xa1\x5a\xd5\xba\x2f\x8d\x50\x86\x4a\xde\xa2\xa2\x95\xc2\x7b\x2a\x5d\xb3\xcd\xd9\x82\xb1\xb2\x84\x87\x07\x58\xdd\x08\x92\x78\xce\x1d\xbe\xe5\x3d\xc2\xe3\xe3\xa5\x22\x6c\x2d\x27\xa1\x15\x08\x07\x5c\x05\x84\xd1\xb2\xd1\xf6\x45\x2f\x46\x1f\x0d\x1e\x8d\xe7\xc8\x0e\x35\xc1\x03\xcb\xa4\x6e\x5b\xb4\x00\xae\xd9\xae\xae\xc2\x99\x65\xb5\x56\x1b\xd1\x46\xdb\x79\x38\xb3\xac\xe7\x8a\xfb\x0f\xbd\xed\xf7\x78\x66\x99\xc5\xcd\x8d\x87\x73\x64\x85\x6a\x19\xcb\x5a\xcb\x4d\xf7\xc7\x15\x40\x74\xfe\x2d\x3e\x9e\x4b\x81\x8a\x58\xd6\x11\x99\x78\x0e\x6f\xdf\xdc\xdc\xbc\x4b\xaf\x1e\x19\xbb\xe3\x16\x6e\x83\x7d\x4e\x74\x0d\xc5\x17\x47\x92\x59\x14\x4a\xc8\x28\xe3\x35\x71\x4b\x5e\xac\x9a\x4b\x89\x0d\xec\x3a\x54\x40\x1d\x3e\x51\x4e\x38\x70\xfe\x3b\xa1\x5a\x18\x0c\xdb\x0c\xaa\x86\xa2\x85\xa3\x30\x31\x7a\x91\x04\x9b\xf4\x5a\x42\xd2\x6b\x92\x6b\x09\x2f\xc8\xb5\x00\xb4\xd6\x57\x8d\x65\xed\x2a\x45\x59\x8f\x71\xde\x0b\xea\x52\xe8\x25\xe4\x66\xdb\xe6\x4b\xc8\x3d\xa3\x2b\xbd\x43\x3b\x63\x94\x2f\xbc\x7b\x42\x5c\x27\x68\x6f\x1a\x11\xd7\x23\xb6\x37\x8e\x05\x5a\x1f\x08\xc6\xb2\x84\x7f\xa9\x36\xba\x18\x69\x2d\x21\x1f\x15\xf2\x70\x16\x69\xb0\x0a\x94\x90\xbe\x4e\x65\x09\xbf\x2a\xab\xa5\xfc\x54\x67\x0e\x0a\x77\x4f\x95\x56\x8e\xb8\xaa\x31\xb4\x6f\xd3\x60\x73\x82\xd8\x11\xa3\xd8\x87\x88\x8d\x11\x1f\x66\x4a\x1e\xa0\x8f\x91\xa1\xd2\x04\xa2\x37\x12\x7b\x54\x84\xcd\x8b\xc9\x5c\x08\xd7\x0b\xe7\x9e\x65\xa3\x00\xef\x85\x0b\x5d\x72\x28\x27\x8b\xbd\xbe\x3b\x29\xab\x04\xf6\x7f\xd3\x6a\x12\xd7\xd7\xe4\xf5\x1e\xab\x37\x5a\x6f\x9f\x57\x69\x87\x55\x97\x5e\x58\xac\x51\xdc\x61\x03\x5a\x41\x85\x1d\x97\x1b\xd0\x9b\x4f\x2f\xcc\x09\xe9\x25\xcc\x62\x84\xf0\x69\x24\xdb\xf1\xe4\x46\xa7\xd7\x24\x77\x4d\xda\xbc\xe6\x9e\x77\x03\x85\x0a\x36\x7a\x17\x47\x66\x2d\x91\xab\x13\x6f\xbd\x36\xc5\x71\xf6\x8e\xb4\x31\x07\x2f\xcc\x7d\x58\x08\x13\x61\xd2\x40\x28\xe5\x33\xce\xa4\xc1\x0e\xa9\xf9\xbc\xcb\x29\x17\x26\x38\x14\xd1\x2f\x28\x1f\x2d\xaf\xb8\x2c\xc9\xc5\x5f\xf9\xa0\x37\xcb\xca\x12\xde\x09\x83\xd0\x0f\x8e\xa0\xc2\x19\xed\x0a\x5b\x31\x23\x08\x5c\x35\x63\x1b\x01\x07\xe3\x9d\xbc\xce\x0e\x55\x13\x84\xe7\xc4\x59\x16\xcc\x67\xeb\xe4\xb3\xf2\xa1\x8b\x04\x73\x4d\x9c\xe2\x80\x80\x7a\x70\xa4\x7b\x3f\x34\x0d\xd6\x62\x23\x6a\x4f\x89\x10\x74\xf5\x37\xd6\x14\xc2\x52\x27\xdc\x13\xc1\x3c\xfc\xe8\xc7\xb2\xf8\xfd\x04\x14\x82\x8f\x48\xe7\xe9\xb3\xcb\x0b\xd8\x09\x29\x21\x55\xc9\x97\x60\x8f\x2c\x9a\x04\x83\x63\x01\xb2\x7a\x72\x9b\x02\x4f\xb1\xf6\xd1\xe3\x44\x0e\x8b\xfa\xe3\x0b\xa9\xc4\x41\x3d\xcc\xb6\x77\xc8\x65\xe2\x9e\x46\xfa\x0c\x23\x18\x42\xfc\x76\x35\x2e\xd6\x35\xec\x27\xfd\xb8\x5d\xd3\x7a\x29\x16\xab\xb7\xb8\x2b\x72\xbf\x64\xdd\x59\x59\x3a\xdd\xe3\x6d\x70\xfb\x20\x6f\xb9\x11\xe1\x37\x48\xee\x37\x93\xf9\x33\xee\xeb\xbf\xe2\xbf\x07\x96\x65\xf9\x2f\x03\x75\xda\x8a\x7f\x02\xbd\xfc\x0c\xf2\x0a\xb9\x45\x0b\x5f\x7f\xf3\xed\x77\xdf\xff\xf0\xe3\x4f\x3f\x7f\x95\x2f\x59\xf6\x18\x96\xcf\x6c\x8d\xcf\xe9\xf8\x75\xfe\x5f\x5c\x2c\x3a\xfa\x8c\x44\xf6\xed\x7c\x81\xd5\xd0\x1e\xea\xe7\x78\x23\x43\x85\xc2\xf3\xd8\xb6\x1d\x5a\x0c\xd6\x2f\xe7\x7f\xc1\xf2\x61\x10\x84\xb1\x2d\x74\x6f\x84\x44\x7b\xc6\xb2\x5b\x58\x87\xe6\x8e\xa7\xd0\x67\xf1\x38\xb5\x47\x7a\x4e\x0b\xf9\xc9\x0c\xf8\x37\x00\x00\xff\xff\xc4\x12\x2e\x3e\x23\x0a\x00\x00")

func templateInternalRootGoTmplBytes() ([]byte, error) {
	return bindataRead(
		_templateInternalRootGoTmpl,
		"template/internal/root.go.tmpl",
	)
}

func templateInternalRootGoTmpl() (*asset, error) {
	bytes, err := templateInternalRootGoTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "template/internal/root.go.tmpl", size: 2595, mode: os.FileMode(420), modTime: time.Unix(1591716328, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"template/README.md.tmpl":          templateReadmeMdTmpl,
	"template/app/.gitignore":          templateAppGitignore,
	"template/app/README.md.tmpl":      templateAppReadmeMdTmpl,
	"template/app/package.json.tmpl":   templateAppPackageJsonTmpl,
	"template/app/public/index.html":   templateAppPublicIndexHtml,
	"template/app/public/robots.txt":   templateAppPublicRobotsTxt,
	"template/app/src/App.tsx.tmpl":    templateAppSrcAppTsxTmpl,
	"template/app/src/index.tsx.tmpl":  templateAppSrcIndexTsxTmpl,
	"template/app/src/integration.tsx": templateAppSrcIntegrationTsx,
	"template/app/tsconfig.json":       templateAppTsconfigJson,
	"template/go.mod.tmpl":             templateGoModTmpl,
	"template/integration.go.tmpl":     templateIntegrationGoTmpl,
	"template/integration.yaml.tmpl":   templateIntegrationYamlTmpl,
	"template/internal/root.go.tmpl":   templateInternalRootGoTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"template": &bintree{nil, map[string]*bintree{
		"README.md.tmpl": &bintree{templateReadmeMdTmpl, map[string]*bintree{}},
		"app": &bintree{nil, map[string]*bintree{
			".gitignore":        &bintree{templateAppGitignore, map[string]*bintree{}},
			"README.md.tmpl":    &bintree{templateAppReadmeMdTmpl, map[string]*bintree{}},
			"package.json.tmpl": &bintree{templateAppPackageJsonTmpl, map[string]*bintree{}},
			"public": &bintree{nil, map[string]*bintree{
				"index.html": &bintree{templateAppPublicIndexHtml, map[string]*bintree{}},
				"robots.txt": &bintree{templateAppPublicRobotsTxt, map[string]*bintree{}},
			}},
			"src": &bintree{nil, map[string]*bintree{
				"App.tsx.tmpl":    &bintree{templateAppSrcAppTsxTmpl, map[string]*bintree{}},
				"index.tsx.tmpl":  &bintree{templateAppSrcIndexTsxTmpl, map[string]*bintree{}},
				"integration.tsx": &bintree{templateAppSrcIntegrationTsx, map[string]*bintree{}},
			}},
			"tsconfig.json": &bintree{templateAppTsconfigJson, map[string]*bintree{}},
		}},
		"go.mod.tmpl":           &bintree{templateGoModTmpl, map[string]*bintree{}},
		"integration.go.tmpl":   &bintree{templateIntegrationGoTmpl, map[string]*bintree{}},
		"integration.yaml.tmpl": &bintree{templateIntegrationYamlTmpl, map[string]*bintree{}},
		"internal": &bintree{nil, map[string]*bintree{
			"root.go.tmpl": &bintree{templateInternalRootGoTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
